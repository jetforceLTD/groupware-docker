#!/bin/bash

T_DOM="acm.me"
T_PASS="xxx123"
T_USER="hugo"


. ./groupware.env-template
slist="syslog traefik imap sogo"
list="imap sogo"

dcompose() { docker-compose -f ./docker-compose.yml-template $* ; }
_down()    { for i in `echo "$slist"|tr ' ' '\n'|tac|tr '\n' ' ' | sort -r`; do ( cd $i ; dcompose down ) ; done }
_help()    { echo " usage: `basename $0` build|install|info|down|up|uninstall" ; exit 0 ; }

_info()
{
  echo ""
  echo "Mail-Log  : tail -f ${GLOBAL_DIR_LOGS}/imap/maillog"
  echo ""
  echo "PFA-Login : https://${PFA_FRONTEND_FQDN}:${GLOBAL_FRONTEND_PORT}     (User: admin@${T_DOM}  Password: ${T_PASS})"
  echo "SOGo-Login: https://${SOGO_FRONTEND_FQDN}:${GLOBAL_FRONTEND_PORT}/SOGo  (User: ${T_USER}@${T_DOM}  Password: ${T_PASS})"
  echo ""
  return
}

#######################################################################
if [ "$1" = "" ] ; then _help ; exit 0 ; fi
#######################################################################
if [ "$1" = "down" ] ; then _down ; exit 0 ; fi
#######################################################################
if [ "$1" = "info" ] ; then _info ; exit 0 ; fi
#######################################################################
if [ "$1" = "uninstall" ] ; then
  _down
  for i in $slist ; do
    echo "remove $GLOBAL_DIR_SERV/$i"
    sudo rm -Rf $GLOBAL_DIR_SERV/$i
  done
  sudo echo "remove $GLOBAL_DIR_LOGS $GLOBAL_DIR_MAIL"
  sudo rm -Rf $GLOBAL_DIR_LOGS $GLOBAL_DIR_MAIL
  sudo rmdir $GLOBAL_DIR_SERV 2>/dev/null
  echo "cleanup /etc/hosts"
  sudo sed -i '/127.0.0.1 "$PFA_FRONTEND_FQDN"*$/d'  /etc/hosts
  sudo sed -i '/127.0.0.1 "$SOGO_FRONTEND_FQDN"*$/d' /etc/hosts
  if [ -e ./groupware.env ] ; then
    for i in $slist ; do ( cd $i && ln -sf ../groupware.env .env ) ; done
  else
    for i in $slist ; do rm -f $i/.env ; done 
  fi
  exit 0
fi
#######################################################################
if [ "$1" = "build" ] ; then
  ( cd sogo ; dcompose build )
  ( cd imap ; dcompose build )
  exit 0
fi
#######################################################################
if [ "$1" = "install" ] ; then
  sudo mkdir -p $GLOBAL_DIR_LOGS $GLOBAL_DIR_SERV $GLOBAL_DIR_MAIL
  for i in $list ; do
    sudo mkdir -p $GLOBAL_DIR_SERV/$i/service
    if [ ! -d ./$i ] ; then
      git clone https://github.com/unimock/${i}-docker.git ${i}
    fi
    ( cd $i && ln -sf ../groupware.env-template .env )
    ( cd $i ; dcompose build )
  done
  for i in $slist ; do
    ( cd $i && ln -sf ../groupware.env-template .env )
    cp ./groupware.env-template $i/.env-template
    if [ "$i" = "sogo" ] ; then
      sudo cp -v groupware.env-template $GLOBAL_DIR_SERV/$i/service/sogo.env
    fi
  done
  if ! grep -q "127.0.0.1 $PFA_FRONTEND_FQDN"  /etc/hosts ; then sudo sh -c "echo '127.0.0.1 "$PFA_FRONTEND_FQDN"'  >> /etc/hosts" ; fi
  if ! grep -q "127.0.0.1 $SOGO_FRONTEND_FQDN" /etc/hosts ; then sudo sh -c "echo '127.0.0.1 "$SOGO_FRONTEND_FQDN"' >> /etc/hosts" ; fi
  ( cd ./traefik && ./generate-ssl  ${GLOBAL_FRONTEND_DOMAIN} )
  ( cd ./syslog  && dcompose up -d )
  ( cd ./traefik && dcompose up -d )
  ( cd ./imap    && dcompose up -d )
  echo ""
  echo -n " the pfadmin database structure will be created "
  while  ! curl --insecure https://${PFA_FRONTEND_FQDN}:${GLOBAL_FRONTEND_PORT}/setup.php 2>/dev/null | grep "Change setup password" >/dev/null ; do echo -n "." ; sleep 1 ; done
  docker exec -it postfixadmin php -q /postfixadmin/scripts/postfixadmin-cli.php admin   add admin@${T_DOM} --password ${T_PASS} --password2 ${T_PASS} --superadmin 1 --active 1
  docker exec -it postfixadmin php -q /postfixadmin/scripts/postfixadmin-cli.php domain  add       ${T_DOM}  --active 1 --default-aliases 0
  docker exec -it postfixadmin php -q /postfixadmin/scripts/postfixadmin-cli.php mailbox add  hugo@${T_DOM} --password ${T_PASS} --password2 ${T_PASS} --name ${T_USER}@${T_DOM} --active 1 --welcome-mail 0
  ( cd ./sogo    ; dcompose up -d )
  echo ""
  echo " # the sogo database structure will be created ..."
  TI=30;SEC=$TI;for i in `seq $SEC -1 1`;do printf "\r %`expr length $SEC`d/$TI" "$i";sleep 1;done;echo
  ( cd sogo && dcompose restart )
  _info
  exit 0
fi
#######################################################################
if [ "$1" = "up" ] ; then
  _down >/dev/null 2>&1
  for i in $slist ; do ( cd ./$i ; dcompose up -d ) ; done
  _info
  exit 0
fi
#######################################################################

